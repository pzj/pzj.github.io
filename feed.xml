<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://pzhjie.com/</id><title>章杰的博客</title><subtitle>欢迎访问章杰的博客</subtitle> <updated>2022-03-29T15:01:01+08:00</updated> <author> <name>pzhjie</name> <uri>https://pzhjie.com/</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pzhjie.com/" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2022 pzhjie </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>程序编译链接过程</title><link href="https://pzhjie.com//posts/c++-build-process/" rel="alternate" type="text/html" title="程序编译链接过程" /><published>2021-01-09T00:00:00+08:00</published> <updated>2021-01-31T18:00:16+08:00</updated> <id>https://pzhjie.com//posts/c++-build-process/</id> <content src="https://pzhjie.com//posts/c++-build-process/" /> <author> <name>pzhjie</name> </author> <category term="技术" /> <summary> C++的编译链接过程 在linux环境下开发C++时，理解编译、链接的原理和过程对于linux C++程序来说是一项基本功。将代码转变为可执行程序的过程大致可分为如下阶段：预编译，编译和链接。 预编译 预编译过程主要处理那些源代码文件中的以“#”开始的预编译指令。比如“#include”、”#define”等，主要的处理规则如下： 1.将所有的#define删除，并展开所有的宏定义 2.处理所有的预编译指令，比如#if,#ifdef等 3.处理#include预处理指令，将被包含的文件插入到该预编译介绍信的位置。该过程是递归的，所有包含的文件都将插入。 4.删除所有的注释//与/**/区域 5.添加行号和文件名标识。例如__LINE__ 6.保留所有的#pragma编译器指令，因为编译器需要使用。 　　提示，GCC中可使用-E来指示编译器只进行预编译。这时候所有的宏已经展开，并... </summary> </entry> <entry><title>2020阅读书单</title><link href="https://pzhjie.com//posts/book-list-of-2020/" rel="alternate" type="text/html" title="2020阅读书单" /><published>2021-01-01T00:00:00+08:00</published> <updated>2021-02-01T23:36:22+08:00</updated> <id>https://pzhjie.com//posts/book-list-of-2020/</id> <content src="https://pzhjie.com//posts/book-list-of-2020/" /> <author> <name>pzhjie</name> </author> <category term="读书" /> <summary> 书单 技术 C++语义和性能分析 从Paxos到Zookeeper分布式一致性原理与实践 古今数学思想（套装共3册） 重构与模式 Erlang程序设计 第2版 事件流实战 JavaScript ES6 函数式编程入门经典 ES6标准入门 第3版 Linux内核观测技术BPF 程序员修炼之道 第2版 现代操作系统：原理与实现 重构 改善既有代码的设计 第2版 程序员代码面试指南：IT名企算法与数据结构题目最优解 Effective Pytho 深入理解Python特性 算法精粹 架构整洁之道 网络是怎样连接的 图解TCP/IP 第5版 Effective Java 程序员修炼之道：通向务实的最高境界（第2版) 计算机体系结构：量化研究方法（英文版·原书第6版） 规模分布式存储系统：原理解析... </summary> </entry> <entry><title>shell技巧</title><link href="https://pzhjie.com//posts/shell-skill/" rel="alternate" type="text/html" title="shell技巧" /><published>2020-12-29T00:00:00+08:00</published> <updated>2021-01-20T00:20:27+08:00</updated> <id>https://pzhjie.com//posts/shell-skill/</id> <content src="https://pzhjie.com//posts/shell-skill/" /> <author> <name>pzhjie</name> </author> <summary> linux后台运行 &amp;amp; 要是关闭终端那么脚本也停了， 加nohup 既使把终端关了，脚本也会跑，是在服务器那运行的。 脚本名称叫test.sh 入参三个: 1 2 3 运行test.sh 1 2 3后 $*为”1 2 3”（一起被引号包住） $@为”1” “2” “3”（分别被包住） $#为3（参数数量） Makefile有三个非常有用的变量。分别是$@，$^，$&amp;lt;代表的意义分别是： $@–目标文件，$^–所有的依赖文件，$&amp;lt;–第一个依赖文件 sudo -s ：切换到root用户的shell 可以不加 ，会使用默认 shell 用户必须有相应shell命令的sudo权限，例如 /usr/bin/bash 一旦切换成功，用户可以以root身份执行任何命令 普通用户使用 sudo -s /usr/bin/bash 命令切换到 root 的shell，然后修... </summary> </entry> <entry><title>深以为然的话</title><link href="https://pzhjie.com//posts/moto-list/" rel="alternate" type="text/html" title="深以为然的话" /><published>2020-12-28T00:00:00+08:00</published> <updated>2021-01-27T20:00:20+08:00</updated> <id>https://pzhjie.com//posts/moto-list/</id> <content src="https://pzhjie.com//posts/moto-list/" /> <author> <name>pzhjie</name> </author> <category term="生活" /> <summary> 一个知识越贫乏的人，越是拥有一种莫名其妙的勇气和自豪感。因为知识越贫乏，你所相信的东西就越绝对，因为你根本没有听过与此相对立的观点。夜郎自大是无知者、好辩者的天性。 不要轻易地去论断他人，因为我们的认识能力是有限的 不要过分放纵自己，因为快乐来得越容易越廉价，就越不能长久 不要沉溺在对结果没有直接帮助只是因为自己遭受了一些痛苦的行为中，误以为那就是努力 这些年我一直提醒自己一件事情，千万不要自己感动自己。大部分人看似的努力，不过是愚蠢导致的。什么熬夜看书到天亮，连续几天只睡几小时，多久没放假了，如果这些东西也值得夸耀，那么富士康流水线上任何一个人都比你努力多了。人难免天生有自怜的情绪，唯有时刻保持清醒，才能看清真正的价值在哪里 不要猜测别人动机，而要看别人做的事 ... </summary> </entry> <entry><title>设计模式(行为型)</title><link href="https://pzhjie.com//posts/design-patterns-structure/" rel="alternate" type="text/html" title="设计模式(行为型)" /><published>2020-12-17T00:00:00+08:00</published> <updated>2021-01-18T19:33:24+08:00</updated> <id>https://pzhjie.com//posts/design-patterns-structure/</id> <content src="https://pzhjie.com//posts/design-patterns-structure/" /> <author> <name>pzhjie</name> </author> <category term="技术" /> <summary> 中文名 英文名 适应场景 观察者 Observer   模板 Template   策略 Strategy   职责链 Chain of Responsibility   状态 State   迭代器 Iterator   访问者 Visitor   备忘录 Memento   ... </summary> </entry> </feed>
